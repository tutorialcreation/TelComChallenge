# Pylint settings at:
# http://pylint.pycqa.org/en/latest/technical_reference/features.html

[MASTER]
profile = no
persistent = no
ignore = codegen


[IMPORTS]
deprecated-modules=ujson

[VARIABLES]
# Tells whether we should check for unused import in __init__ files.
init-import=no

[MESSAGES CONTROL]

# we disable all of the rules that are not listed above (may be missing some rules that we'll need to add as we go)
disable =
  C0102, # Black listed name "%s"
  C0103, # Invalid %s name "%s"
  C0111, # Missing %s docstring
  C0121, # Missing required attribute "%s"
  C0202, # Class method %s should have cls as first argument
  C0203, # Metaclass method %s should have mcs as first argument
  C0204, # Metaclass class method %s should have %s as first argument
  C0301, # Line too long (%s/%s)
  C0302, # Too many lines in module (%s)
  C0321, # More than one statement on a single line
  C0325, # Unnecessary parens after %r keyword
  C0326, # %s space %s %s %s\n%s
  C0330, # Wrong %s indentation%s%s.\n%s%s
  C0412, # Imports from package %s are not grouped (ungrouped-imports)
  C0413, # Import "%s" should be placed at the top of the module
  C1001, # Old-style class defined
  E0011, # Unrecognized file option %r
  E0401, # import errors
  E0100, # __init__ method is a generator
  E0106, # Return with argument inside generator
  E0107, # Use of the non-existent %s operator
  E0202, # An attribute defined in %s line %s hides this method
  E0213, # Method should have "self" as first argument
  E0221, # Interface resolved to %s is not a class
  E0702, # Raising %s while only classes or instances are allowed
  E0710, # Raising a new style class which doesn't inherit from BaseException
  E0712, # Catching an exception which doesn't inherit from Exception: %s
  E1001, # Use of __slots__ on an old style class
  E1002, # Use of super on an old style class
  E1004, # Missing argument to super()
  E1101, # %s %r has no %r member%s
  E1120, # No value passed for parameter %s in function call
  E1125, # Missing mandatory keyword argument %r in %s call
  E1300, # Unsupported format character %r (%#02x) at index %d
  E1301, # Format string ends in middle of conversion specifier
  E1302, # Mixing named and unnamed conversion specifiers in format string
  E1303, # Expected mapping for format string, not %s
  E1310, # Suspicious argument in %s.%s call
  F0001, # %s (error prevented analysis; message varies)
  F0002, # %s: %s (unexpected error; message varies)
  F0003, # ignored builtin module %s
  F0004, # unexpected inferred value %s
  F0202, # Unable to check methods signature (%s / %s)
  F0220, # failed to resolve interfaces implemented by %s (%s)
  I0001, # Unable to run raw checkers on built-in module %s
  I0010, # Unable to consider inline option %r
  I0011, # Locally disabling %s (%s)
  I0012, # Locally enabling %s
  I0013, # Ignoring entire file
  I0020, # Suppressed %s (from line %d)
  I0021, # Useless suppression of %s
  native-string,
  R0201, # Method could be a function
  R0401, # Cyclic import (%s)
  R0801, # Similar lines in %s files
  R0901, # Too many ancestors (%s/%s)
  R0902, # Too many instance attributes (%s/%s)
  R0903, # Too few public methods (%s/%s)
  R0904, # Too many public methods (%s/%s)
  R0911, # Too many return statements (%s/%s)
  R0912, # Too many branches (%s/%s)
  R0913, # Too many arguments (%s/%s)
  R0914, # Too many local variables (%s/%s)
  R0915, # Too many statements (%s/%s)
  R0921, # Abstract class not referenced
  R0922, # Abstract class is only referenced %s times
  R0923, # Interface not implemented
  R1705, # Unnecessary "%s" after "return"
  RP0001, # Messages by category
  RP0002, # % errors / warnings by module
  RP0003, # Messages
  RP0004, # Global evaluation
  RP0101, # Statistics by type
  RP0401, # External dependencies
  RP0402, # Modules dependencies graph
  RP0701, # Raw metrics
  RP0801, # Duplication
  W0105, # String statement has no effect
  W0107, # Unnecessary pass statement
  W0108, # Lambda may not be necessary
  W0110, # map/filter on lambda could be replaced by comprehension
  W0120, # Else clause on loop without a break statement
  W0141, # Used builtin function %s (Used when a blacklisted built-in function is used)
  W0142, # Used * or ** magic
  W0150, # %s statement in finally block may swallow exception
  W0201, # Attribute %r defined outside __init__
  W0211, # Static method with %r as first argument
  W0212, # Access to a protected member %s of a client class
  W0221, # Parameters differ from %s %r method
  W0222, # Signature differs from %s %r method
  W0223, # Method %r is abstract in class %r but is not overridden
  W0231, # __init__ method from base class %r is not called
  W0232, # Class has no __init__ method
  W0233, # __init__ method from a non direct base class %r is called
  W0401, # Wildcard import %s
  W0403, # Relative import %r, should be %r'
  W0404, # Reimport %r (imported line %s)
  W0406, # Module import itself
  W0511, # %s (Used when a warning note as FIXME or XXX is detected.)
  W0512, # Cannot decode using encoding "%s", unexpected byte at position %d
  W0602, # Using global for %r but no assignment is done
  W0603, # Using the global statement
  W0604, # Using the global statement at the module level
  W0613, # Unused argument %r
  W0614, # Unused import %s from wildcard import
  W0621, # Redefining name %r from outer scope (line %s)
  W0622, # Redefining built-in %r
  W0623, # Redefining name %r from %s in exception handler
  W0632, # Possible unbalanced tuple unpacking with sequence%s: left side has %d label(s), right side has %d value(s)
  W0702, # No exception type(s) specified
  W0703, # Catching too general exception %s
  W0704, # Except doesn't do anything
  W0710, # Exception doesn't inherit from standard "Exception" class
  W0711, # Exception to catch is the result of a binary "%s" operation
  W1001, # Use of "property" on an old style class
  W1300, # Format string dictionary key should be a string, not %s
  W1309, # Using an f-string that does not have any interpolated variables
  W1401, # Anomalous backslash in string: '%s'. String constant might be missing an r prefix.
  W1402, # Anomalous Unicode escape in byte string: '%s'. String constant might be missing an r or u prefix.
  W0707, # Consider explicitly re-raising using the 'from' keyword (raise-missing-from
  C0415, # Import outside toplevel (async_tasks.signals) (import-outside-toplevel)
  W0611, # Unused import async_tasks.signals (unused-import)
  R1710, # Either all return statements in a function should return an expression, or none of them should. (inconsistent-return-statements)
  W0123, # Use of eval (eval-used)
